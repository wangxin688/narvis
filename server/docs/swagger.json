{
    "swagger": "2.0",
    "info": {
        "description": "Narvis OpenAPI for developers.",
        "title": "Narvis API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Jeffry"
        },
        "version": "1.0"
    },
    "paths": {
        "/admin/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "list roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List roles",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RoleCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Role"
                        }
                    }
                }
            }
        },
        "/admin/roles/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.RoleDetail"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RoleUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Role"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Role"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "maximum": 4,
                        "minimum": 0,
                        "type": "integer",
                        "name": "authType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "roleId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get user me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update user me",
                "parameters": [
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UserUpdateMe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/alert/action-logs": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Action Log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Create Action Log",
                "parameters": [
                    {
                        "description": "Create Action Log",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ActionLogCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/alert/alert-groups": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Alert Group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Create Alert Group",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.AlertGroupCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/alert/alerts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List Alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "List Alerts",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "acknowledged",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "alertName",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "apId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "circuitId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceInterfaceId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceRole",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "endsAtGte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "endsAtLte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "severity",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startedAtGte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startedAtLte",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "suppressed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Alert"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create Alert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Create Alert",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.AlertCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/alert/alerts/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Alert",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Get Alert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted alertId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Alert"
                        }
                    }
                }
            }
        },
        "/alert/maintenances": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List Maintenances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "List Maintenances",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "maintenanceType",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Approaching",
                            "Active",
                            "Expired"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Maintenance"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Maintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Create Maintenance",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.MaintenanceCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/alert/maintenances/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Maintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Get Maintenance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Maintenance"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Maintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Update Maintenance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.MaintenanceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Maintenance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Delete Maintenance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/alert/subscriptions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List Subscriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "List Subscriptions",
                "parameters": [
                    {
                        "enum": [
                            "Webhook",
                            "Email"
                        ],
                        "type": "string",
                        "name": "channelType",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "enabled",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Subscription"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Create Subscription",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SubscriptionCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/alert/subscriptions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Get Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted subscriptionId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Subscription"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Update Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted subscriptionId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SubscriptionUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert"
                ],
                "summary": "Delete Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted subscriptionId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/assurance/device-healthy": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Device Healthy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assurance"
                ],
                "summary": "Get Device Healthy",
                "parameters": [
                    {
                        "type": "string",
                        "name": "siteId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.HealthHeatMap"
                        }
                    }
                }
            }
        },
        "/infra/aps": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List aps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.AP"
                ],
                "summary": "List aps",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "managementIp",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "manufacturer",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "serialNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.AP"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Batch Update ap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.AP"
                ],
                "summary": "Batch Update ap",
                "parameters": [
                    {
                        "description": "aps",
                        "name": "aps",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.ApBatchUpdate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdsResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Batch Delete ap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.AP"
                ],
                "summary": "Batch Delete ap",
                "parameters": [
                    {
                        "description": "ids",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdsResponse"
                        }
                    }
                }
            }
        },
        "/infra/aps/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get ap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.AP"
                ],
                "summary": "Get ap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted ap id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AP"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update ap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.AP"
                ],
                "summary": "Update ap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted ap id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ap",
                        "name": "ap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ApUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete ap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.AP"
                ],
                "summary": "Delete ap",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted ap id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/circuits": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List circuits",
                "tags": [
                    "Infra.Circuit"
                ],
                "summary": "List circuits",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "cid",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "Internet",
                                "MPLS",
                                "IEPL",
                                "DPLC",
                                "DarkFiber",
                                "ADSL"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "circuitType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "interfaceId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ipv4Address",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ipv6Address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "monitorId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Circuit"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new circuit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Circuit"
                ],
                "summary": "Create new circuit",
                "parameters": [
                    {
                        "description": "Circuit",
                        "name": "circuit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CircuitCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/circuits/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get circuit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Circuit"
                ],
                "summary": "Get circuit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted circuitId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Circuit"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update circuit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Circuit"
                ],
                "summary": "Update circuit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted circuitId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Circuit",
                        "name": "circuit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CircuitUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Circuit"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted circuitId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/device-config-backup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Device Configuration backup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Device Configuration backup",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ConfigBackUpCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdsResponse"
                        }
                    }
                }
            }
        },
        "/infra/devices": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "List devices",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceModel",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceRole",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "managementIp",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "manufacturer",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "rackId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "serialNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Device"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Create device",
                "parameters": [
                    {
                        "description": "device",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.DeviceCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/devices/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Get device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Device"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Update device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "device",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.DeviceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Delete device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/devices/{id}/cli": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get device cli credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Get device cli credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CliCredential"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update device cli credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Update device cli credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CliCredentialUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create device new cli credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Create device new cli credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CliCredentialCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete device cli credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Delete device cli credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/devices/{id}/interfaces": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get device interfaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Get device interfaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.DeviceInterface"
                            }
                        }
                    }
                }
            }
        },
        "/infra/devices/{id}/restconf": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get device restconf credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Get device restconf credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.RestconfCredential"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update device restconf credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Update device restconf credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RestconfCredentialUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new device restconf credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Create new device restconf credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RestconfCredentialCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete device restconf credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Delete device restconf credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/devices/{id}/snmpv2": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get device snmpV2 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Get device snmpV2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SnmpV2Credential"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update device snmpV2 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Update device snmpV2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SnmpV2CredentialUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create device new snmpV2 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Create new device snmpV2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SnmpV2CredentialCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete device snmpV2 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Device"
                ],
                "summary": "Delete device snmpV2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/racks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List racks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Rack"
                ],
                "summary": "List racks",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "serialNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "siteId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Rack"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new rack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Rack"
                ],
                "summary": "Create new rack",
                "parameters": [
                    {
                        "description": "rack",
                        "name": "rack",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RackCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/racks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get rack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Rack"
                ],
                "summary": "Get rack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rackId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.RackElevation"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update rack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Rack"
                ],
                "summary": "Update rack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rackId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "rack",
                        "name": "rack",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RackUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete rack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Rack"
                ],
                "summary": "Delete rack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "rackId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/scan-aps": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan AP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan AP",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ScanApCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdsResponse"
                        }
                    }
                }
            }
        },
        "/infra/scan-device-details": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan device details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan device details",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ScanDeviceDetailTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdsResponse"
                        }
                    }
                }
            }
        },
        "/infra/scan-devices": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan Device List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan Device List",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "chassisId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceModel",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "managementIp",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "manufacturer",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "platform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.ScanDevice"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan Device Batch Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan Device Batch Update",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ScanDeviceBatchUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdsResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan Device Create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan Device Create",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ScanDeviceCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ScanDeviceCreateResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan Device Batch Delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan Device Batch Delete",
                "parameters": [
                    {
                        "description": "ids",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdsResponse"
                        }
                    }
                }
            }
        },
        "/infra/scan-devices/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan Device Get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan Device Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted scanDeviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ScanDevice"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan Device Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan Device Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted scanDeviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ScanDeviceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan Device Delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.ScanDevice"
                ],
                "summary": "Scan Device Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted scanDeviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/servers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get servers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Get servers",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "managementIp",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "manufacturer",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "osVersion",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "rackId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Server"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Create new server",
                "parameters": [
                    {
                        "description": "server",
                        "name": "server",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ServerCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/servers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Get server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted serverId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Server"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Update server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted serverId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "server",
                        "name": "server",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ServerUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Delete server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted serverId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/servers/{id}/cli": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Server cli credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Get Server cli credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CliCredential"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update Server cli credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Update Server cli credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CliCredentialUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create Server new cli credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Create Server new cli credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CliCredentialCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete Server cli credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Delete Server cli credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/servers/{id}/snmpv2": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get server snmpV2 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Get server snmpV2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SnmpV2Credential"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update server snmpV2 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Update server snmpV2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SnmpV2CredentialUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create server new snmpV2 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Create server new snmpV2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SnmpV2CredentialCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete server snmpV2 credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Server"
                ],
                "summary": "Delete server snmpV2 credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted deviceId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/sites": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List sites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Site"
                ],
                "summary": "List sites",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "siteCode",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.SiteResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Site"
                ],
                "summary": "Create new site",
                "parameters": [
                    {
                        "description": "site",
                        "name": "site",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SiteCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/infra/sites/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Site"
                ],
                "summary": "Get site",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted siteId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SiteDetail"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Site"
                ],
                "summary": "Update site",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted siteId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "site",
                        "name": "site",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SiteUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Infra.Site"
                ],
                "summary": "Delete site",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted siteId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/intend/device-roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Intend"
                ],
                "summary": "Get list of device roles",
                "parameters": [
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/devicerole.DeviceRole"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/intend/manufacturers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Intend"
                ],
                "summary": "Get list of Manufacturers",
                "parameters": [
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/intend/platforms": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Intend"
                ],
                "summary": "Get list of Platforms",
                "parameters": [
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "platform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/ipam/ip-addresses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get ip address list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Get ip address list",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Active, Reserved, Deprecated",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Dynamic, Static, Gateway, Broadcast, NetworkId",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "vlan",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.IpAddress"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create ip address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Create ip address",
                "parameters": [
                    {
                        "description": "ip",
                        "name": "ip",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.IpAddressCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/ipam/ip-addresses/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get ip address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Get ip address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted ipAddressId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IpAddress"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update ip address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Update ip address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted ipAddressId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ip",
                        "name": "ip",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.IpAddressUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IpAddress"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete ip address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Delete ip address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted ipAddressId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/ipam/prefixes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get prefix list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Get prefix list",
                "parameters": [
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Dynamic",
                            "Static"
                        ],
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "IPv4",
                            "IPv6"
                        ],
                        "type": "string",
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "maxItems": 4094,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "vlanId",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "vlanName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/schemas.ListResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/schemas.Prefix"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create prefix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Create prefix",
                "parameters": [
                    {
                        "description": "Prefix",
                        "name": "prefix",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.PrefixCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/ipam/prefixes/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get prefix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Get prefix",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted prefixId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Prefix"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update prefix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Update prefix",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted prefixId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Prefix",
                        "name": "prefix",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.PrefixUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete prefix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IPAM"
                ],
                "summary": "Delete prefix",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid formatted prefixId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.IdResponse"
                        }
                    }
                }
            }
        },
        "/login/password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Username Password Login",
                "parameters": [
                    {
                        "description": "Username Password Login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Oauth2PasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/security.AccessToken"
                        }
                    }
                }
            }
        },
        "/login/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Generate refresh token",
                "parameters": [
                    {
                        "description": "Generate refresh token",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Oauth2RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/security.AccessToken"
                        }
                    }
                }
            }
        },
        "/monitor/time-series": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Time Series Data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitor"
                ],
                "summary": "Get Time Series Data",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "apName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "dataPoints",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "deviceId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "endedAt",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "funcName",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ifName",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "metricName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "radioType",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "siteId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startedAt",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/vtm.MatrixResponse"
                            }
                        }
                    }
                }
            }
        },
        "/org/organizations": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Create organization",
                "parameters": [
                    {
                        "description": "Create organization",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Organization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Organization"
                        }
                    }
                }
            }
        },
        "/task/config-backup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Configuration backup callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "ConfigurationBackup Callback",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/intendtask.ConfigurationBackupTaskResult"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/task/scan-ap": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan AP callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "ScanAP Callback",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/intendtask.ApScanResponse"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/task/scan-device": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan device detail callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "ScanDeviceDetail Callback",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/intendtask.DeviceScanResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/task/scan-device-basic": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan device basic information callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "ScanDevice BasicInfo Callback",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/intendtask.DeviceBasicInfoScanResponse"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/webssh/proxy/{sessionId}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "WebSSH Proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSSH"
                ],
                "summary": "WebSSH Proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/webssh/server/{deviceId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "WebSSH Server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSSH"
                ],
                "summary": "WebSSH Server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "deviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "cols",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "rows",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "alerts.AlertName": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/definitions/common.I18n"
                },
                "name": {
                    "$ref": "#/definitions/alerts.AlertNameEnum"
                },
                "severity": {
                    "$ref": "#/definitions/alerts.SeverityEnum"
                },
                "suggestion": {
                    "$ref": "#/definitions/common.I18n"
                },
                "title": {
                    "$ref": "#/definitions/common.I18n"
                }
            }
        },
        "alerts.AlertNameEnum": {
            "type": "string",
            "enum": [
                "high_cpu_utilization",
                "high_memory_utilization",
                "high_disk_utilization",
                "high_system_load",
                "high_channel_utilization",
                "high_channel_interference",
                "high_channel_noise",
                "high_client_number",
                "high_bandwidth_usage",
                "high_error_rate",
                "high_icmp_ping_response_time",
                "high_icmp_ping_loss",
                "high_temperature",
                "fan_status_abnormal",
                "power_status_abnormal",
                "interface_down",
                "interface_half_duplex",
                "no_snmp_data_collection",
                "unavailable_by_icmp_ping",
                "wireless_access_point_down",
                "unknown",
                "high_swap_space_utilization",
                "high_system_load_average",
                "high_inode_utilization"
            ],
            "x-enum-varnames": [
                "HighCpuUtilization",
                "HighMemoryUtilization",
                "HighDiskUtilization",
                "HighSystemLoad",
                "HighChannelUtilization",
                "HighChannelInterference",
                "HighChannelNoise",
                "HighClientNumber",
                "HighBandwidthUtilization",
                "HighErrorRate",
                "HighICMPLatency",
                "HighICMPPacketLoss",
                "HighTemperature",
                "AbnormalFanStatus",
                "AbnormalPowerStatus",
                "InterfaceDown",
                "InterfaceHalfDuplex",
                "SnmpAgentTimeout",
                "NodePingTimeout",
                "ApDown",
                "Unknown",
                "HighSwapSpaceUtilization",
                "HighSystemLoadAverage",
                "HighINodeUtilization"
            ]
        },
        "alerts.SeverityEnum": {
            "type": "string",
            "enum": [
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "x-enum-varnames": [
                "SeverityDisaster",
                "SeverityCritical",
                "SeverityWarning",
                "SeverityInfo"
            ]
        },
        "am.Alert": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "endsAt": {
                    "description": "rfc3339",
                    "type": "string"
                },
                "generatorURL": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startsAt": {
                    "description": "rfc3339",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "common.I18n": {
            "type": "object",
            "properties": {
                "en": {
                    "type": "string"
                },
                "zh": {
                    "type": "string"
                }
            }
        },
        "devicerole.DeviceRole": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/definitions/common.I18n"
                },
                "device_role": {
                    "$ref": "#/definitions/devicerole.DeviceRoleEnum"
                },
                "product_family": {
                    "$ref": "#/definitions/devicerole.ProductFamilyEnum"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "devicerole.DeviceRoleEnum": {
            "type": "string",
            "enum": [
                "WanRouter",
                "Firewall",
                "InternetSwitch",
                "CoreSwitch",
                "DistributionSwitch",
                "AccessSwitch",
                "WlanAC",
                "WlanAP",
                "Server",
                "Unknown"
            ],
            "x-enum-varnames": [
                "WanRouter",
                "Firewall",
                "InternetSwitch",
                "CoreSwitch",
                "DistributionSwitch",
                "AccessSwitch",
                "WlanAC",
                "WlanAP",
                "Server",
                "UnknownDeviceRole"
            ]
        },
        "devicerole.ProductFamilyEnum": {
            "type": "string",
            "enum": [
                "Gateway",
                "Switching",
                "Wireless",
                "Computing",
                "Unknown"
            ],
            "x-enum-varnames": [
                "Gateway",
                "Switching",
                "Wireless",
                "Computing",
                "UnknownProductFamily"
            ]
        },
        "intendtask.ApScanResponse": {
            "type": "object",
            "properties": {
                "deviceModel": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "wlanACIpAddress": {
                    "type": "string"
                }
            }
        },
        "intendtask.ArpItem": {
            "type": "object",
            "properties": {
                "hashValue": {
                    "type": "string"
                },
                "ifIndex": {
                    "type": "integer"
                },
                "ipAddress": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer"
                }
            }
        },
        "intendtask.ConfigurationBackupTaskResult": {
            "type": "object",
            "properties": {
                "backupTime": {
                    "type": "string"
                },
                "configuration": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "hashValue": {
                    "type": "string"
                }
            }
        },
        "intendtask.DeviceBasicInfoScanResponse": {
            "type": "object",
            "properties": {
                "chassisId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceModel": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                }
            }
        },
        "intendtask.DeviceInterface": {
            "type": "object",
            "properties": {
                "hashValue": {
                    "type": "string"
                },
                "ifAdminStatus": {
                    "type": "string"
                },
                "ifDescr": {
                    "type": "string"
                },
                "ifHighSpeed": {
                    "type": "integer"
                },
                "ifIndex": {
                    "type": "integer"
                },
                "ifIpAddress": {
                    "type": "string"
                },
                "ifLastChange": {
                    "type": "integer"
                },
                "ifMtu": {
                    "type": "integer"
                },
                "ifName": {
                    "type": "string"
                },
                "ifOperStatus": {
                    "type": "string"
                },
                "ifPhysAddr": {
                    "type": "string"
                },
                "ifSpeed": {
                    "type": "integer"
                },
                "ifType": {
                    "type": "string"
                }
            }
        },
        "intendtask.DeviceScanResponse": {
            "type": "object",
            "properties": {
                "arpTable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/intendtask.ArpItem"
                    }
                },
                "chassisId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "deviceModel": {
                    "type": "string"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/intendtask.Entity"
                    }
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "icmpReachable": {
                    "type": "boolean"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/intendtask.DeviceInterface"
                    }
                },
                "lldpNeighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/intendtask.LldpNeighbor"
                    }
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "snmpReachable": {
                    "type": "boolean"
                },
                "sshReachable": {
                    "type": "boolean"
                },
                "stacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/intendtask.Stack"
                    }
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/intendtask.VlanItem"
                    }
                }
            }
        },
        "intendtask.Entity": {
            "type": "object",
            "properties": {
                "entityPhysicalClass": {
                    "type": "string"
                },
                "entityPhysicalDescr": {
                    "type": "string"
                },
                "entityPhysicalName": {
                    "type": "string"
                },
                "entityPhysicalSerialNum": {
                    "type": "string"
                },
                "entityPhysicalSoftwareRev": {
                    "type": "string"
                }
            }
        },
        "intendtask.LldpNeighbor": {
            "type": "object",
            "properties": {
                "hashValue": {
                    "type": "string"
                },
                "localChassisId": {
                    "type": "string"
                },
                "localHostname": {
                    "type": "string"
                },
                "localIfDescr": {
                    "type": "string"
                },
                "localIfName": {
                    "type": "string"
                },
                "remoteChassisId": {
                    "type": "string"
                },
                "remoteHostname": {
                    "type": "string"
                },
                "remoteIfDescr": {
                    "type": "string"
                },
                "remoteIfName": {
                    "type": "string"
                }
            }
        },
        "intendtask.Stack": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "intendtask.VlanItem": {
            "type": "object",
            "properties": {
                "gateway": {
                    "type": "string"
                },
                "ifIndex": {
                    "type": "integer"
                },
                "range": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer"
                },
                "vlanName": {
                    "type": "string"
                }
            }
        },
        "schemas.AP": {
            "type": "object",
            "properties": {
                "coordinateX": {
                    "type": "number"
                },
                "coordinateY": {
                    "type": "number"
                },
                "coordinateZ": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "deviceRole": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "healthStatus": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operStatus": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "wlanACIpAddress": {
                    "type": "string"
                }
            }
        },
        "schemas.ActionLogCreate": {
            "type": "object",
            "required": [
                "alertIds"
            ],
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "alertIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assignUserId": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "resolved": {
                    "type": "boolean"
                },
                "rootCauseId": {
                    "type": "string"
                },
                "suppressed": {
                    "type": "boolean"
                }
            }
        },
        "schemas.Alert": {
            "type": "object",
            "properties": {
                "acknowledged": {
                    "type": "boolean"
                },
                "actionLogCount": {
                    "type": "integer"
                },
                "alertName": {
                    "$ref": "#/definitions/alerts.AlertName"
                },
                "deviceRole": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "entity": {
                    "$ref": "#/definitions/schemas.Entity"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Label"
                    }
                },
                "resolvedAt": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "site": {
                    "$ref": "#/definitions/schemas.SiteShort"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "suppressed": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/schemas.UserShort"
                }
            }
        },
        "schemas.AlertCreate": {
            "type": "object",
            "required": [
                "alertName",
                "eventId",
                "hostId",
                "status",
                "triggerId"
            ],
            "properties": {
                "alertName": {
                    "type": "string"
                },
                "eventId": {
                    "type": "string"
                },
                "hostId": {
                    "type": "string"
                },
                "severity": {
                    "type": "string",
                    "enum": [
                        "P1",
                        "P2",
                        "P3",
                        "P4"
                    ]
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "PROBLEM",
                        "OK"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Label"
                    }
                },
                "triggerId": {
                    "type": "string"
                }
            }
        },
        "schemas.AlertGroupCreate": {
            "type": "object",
            "required": [
                "alerts",
                "status"
            ],
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/am.Alert"
                    }
                },
                "commonAnnotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "commonLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "externalURL": {
                    "type": "string"
                },
                "groupKey": {
                    "type": "string"
                },
                "groupLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "firing",
                        "resolved"
                    ]
                }
            }
        },
        "schemas.ApBatchUpdate": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "coordinateX": {
                    "type": "number"
                },
                "coordinateY": {
                    "type": "number"
                },
                "coordinateZ": {
                    "type": "number"
                },
                "floor": {
                    "type": "string"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                }
            }
        },
        "schemas.ApUpdate": {
            "type": "object",
            "properties": {
                "coordinateX": {
                    "type": "number"
                },
                "coordinateY": {
                    "type": "number"
                },
                "coordinateZ": {
                    "type": "number"
                },
                "floor": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                }
            }
        },
        "schemas.AuthConfig": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            }
        },
        "schemas.ChannelConfig": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "webhook": {
                    "type": "string"
                },
                "webhook_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.Circuit": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                },
                "circuitType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "monitorHostId": {
                    "type": "string"
                },
                "monitorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "rxBandWidth": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "txBandWidth": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.CircuitCreate": {
            "type": "object",
            "required": [
                "cid",
                "circuitType",
                "interfaceId",
                "name",
                "provider",
                "rxBandWidth",
                "status",
                "txBandWidth"
            ],
            "properties": {
                "cid": {
                    "type": "string"
                },
                "circuitType": {
                    "type": "string",
                    "enum": [
                        "Internet",
                        "MPLS",
                        "IEPL",
                        "DPLC",
                        "DarkFiber",
                        "ADSL"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "interfaceId": {
                    "type": "string"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "rxBandWidth": {
                    "type": "integer",
                    "maximum": 800000,
                    "minimum": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                },
                "txBandWidth": {
                    "type": "integer",
                    "maximum": 800000,
                    "minimum": 1
                }
            }
        },
        "schemas.CircuitShort": {
            "type": "object",
            "properties": {
                "RxBandWidth": {
                    "type": "integer"
                },
                "TxBandWidth": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "schemas.CircuitUpdate": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string"
                },
                "circuitType": {
                    "type": "string",
                    "enum": [
                        "Internet",
                        "Intranet"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "interfaceId": {
                    "type": "string"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "rxBandWidth": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                },
                "txBandWidth": {
                    "type": "integer"
                }
            }
        },
        "schemas.CliCredential": {
            "type": "object",
            "properties": {
                "inheritFromOrg": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.CliCredentialCreate": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "port": {
                    "description": "default is 22",
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.CliCredentialUpdate": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.Condition": {
            "type": "object",
            "required": [
                "item",
                "value"
            ],
            "properties": {
                "item": {
                    "type": "string"
                },
                "value": {
                    "description": "[\"*\"] means match all",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.ConfigBackUpCreate": {
            "type": "object",
            "required": [
                "siteId"
            ],
            "properties": {
                "siteId": {
                    "type": "string"
                }
            }
        },
        "schemas.Device": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceModel": {
                    "type": "string"
                },
                "deviceRole": {
                    "type": "string"
                },
                "healthStatus": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "monitorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operStatus": {
                    "type": "string"
                },
                "osPatch": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "rackId": {
                    "type": "string"
                },
                "rackPosition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.DeviceCreate": {
            "type": "object",
            "required": [
                "deviceRole",
                "managementIp",
                "name",
                "siteId",
                "status"
            ],
            "properties": {
                "Platform": {
                    "type": "string"
                },
                "chassisId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceModel": {
                    "type": "string"
                },
                "deviceRole": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "rackId": {
                    "type": "string"
                },
                "rackPosition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                }
            }
        },
        "schemas.DeviceInterface": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ifAdminStatus": {
                    "type": "string"
                },
                "ifDescr": {
                    "type": "string"
                },
                "ifHighSpeed": {
                    "type": "integer"
                },
                "ifIndex": {
                    "type": "integer"
                },
                "ifIpAddress": {
                    "type": "string"
                },
                "ifLastChange": {
                    "type": "string"
                },
                "ifMtu": {
                    "type": "integer"
                },
                "ifName": {
                    "type": "string"
                },
                "ifOperStatus": {
                    "type": "string"
                },
                "ifPhysAddr": {
                    "type": "string"
                },
                "ifSpeed": {
                    "type": "integer"
                },
                "ifType": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.DeviceUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "deviceModel": {
                    "type": "string"
                },
                "deviceRole": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "rackId": {
                    "type": "string"
                },
                "rackPosition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                }
            }
        },
        "schemas.Entity": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "schemas.HealthHeatMap": {
            "type": "object",
            "properties": {
                "good": {
                    "type": "integer"
                },
                "needsAttention": {
                    "type": "integer"
                },
                "poor": {
                    "type": "integer"
                },
                "unhealthy": {
                    "type": "integer"
                },
                "unknown": {
                    "type": "integer"
                }
            }
        },
        "schemas.IdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "schemas.IdsResponse": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.IpAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "description": "Active, Reserved, Deprecated",
                    "type": "string"
                },
                "type": {
                    "description": "Dynamic, Static, Gateway, Broadcast, NetworkId",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vlan": {
                    "type": "integer"
                }
            }
        },
        "schemas.IpAddressCreate": {
            "type": "object",
            "required": [
                "address",
                "siteId",
                "status",
                "type"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Reserved",
                        "Deprecated"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Dynamic",
                        "Static",
                        "Gateway",
                        "Broadcast",
                        "NetworkId"
                    ]
                },
                "vlan": {
                    "type": "integer"
                }
            }
        },
        "schemas.IpAddressUpdate": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Reserved",
                        "Deprecated"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Dynamic",
                        "Static",
                        "Gateway",
                        "Broadcast",
                        "NetworkId"
                    ]
                },
                "vlan": {
                    "type": "integer"
                }
            }
        },
        "schemas.Label": {
            "type": "object",
            "required": [
                "tag",
                "value"
            ],
            "properties": {
                "tag": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "schemas.ListResponse": {
            "type": "object",
            "properties": {
                "results": {},
                "total": {
                    "type": "integer"
                }
            }
        },
        "schemas.Maintenance": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Condition"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "#/definitions/schemas.UserShort"
                },
                "description": {
                    "type": "string"
                },
                "endedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maintenanceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "#/definitions/schemas.UserShort"
                }
            }
        },
        "schemas.MaintenanceCreate": {
            "type": "object",
            "required": [
                "conditions",
                "endedAt",
                "maintenanceType",
                "name",
                "startedAt"
            ],
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Condition"
                    }
                },
                "description": {
                    "type": "string"
                },
                "endedAt": {
                    "type": "string"
                },
                "maintenanceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.MaintenanceUpdate": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Condition"
                    }
                },
                "description": {
                    "type": "string"
                },
                "endedAt": {
                    "type": "string"
                },
                "maintenanceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.Menu": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Menu"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/schemas.Meta"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "redirect": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.Meta": {
            "type": "object",
            "properties": {
                "activePath": {
                    "type": "string"
                },
                "auths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dynamicLevel": {
                    "type": "integer"
                },
                "extraIcon": {
                    "type": "string"
                },
                "frameLoading": {
                    "type": "boolean"
                },
                "frameSrc": {
                    "type": "string"
                },
                "hiddenTag": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "keepAlive": {
                    "type": "boolean"
                },
                "rank": {
                    "type": "integer"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "showLink": {
                    "type": "boolean"
                },
                "showParent": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "transition": {
                    "$ref": "#/definitions/schemas.Transition"
                }
            }
        },
        "schemas.Oauth2PasswordRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "domainName": {
                    "type": "string"
                },
                "enterpriseCode": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.Oauth2RefreshRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "schemas.Organization": {
            "type": "object",
            "required": [
                "active",
                "authType",
                "domainName",
                "enterpriseCode",
                "id",
                "licenseCount",
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "authConfig": {
                    "$ref": "#/definitions/schemas.AuthConfig"
                },
                "authType": {
                    "description": "0: local 1: slack 2: google 3: teams 4: github",
                    "type": "integer",
                    "maximum": 4,
                    "minimum": 0
                },
                "createdAt": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "enterpriseCode": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "licenseCount": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.Prefix": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "utilization": {
                    "description": "percentage",
                    "type": "number"
                },
                "version": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer"
                },
                "vlanName": {
                    "type": "string"
                }
            }
        },
        "schemas.PrefixCreate": {
            "type": "object",
            "required": [
                "range",
                "siteId",
                "type"
            ],
            "properties": {
                "gateway": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Dynamic",
                        "Static"
                    ]
                },
                "vlanId": {
                    "description": "not support VxLAN now",
                    "type": "integer",
                    "maximum": 4094,
                    "minimum": 1
                },
                "vlanName": {
                    "type": "string"
                }
            }
        },
        "schemas.PrefixUpdate": {
            "type": "object",
            "properties": {
                "gateway": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Dynamic",
                        "Static"
                    ]
                },
                "vlanId": {
                    "type": "integer",
                    "maximum": 4094
                },
                "vlanName": {
                    "type": "string"
                }
            }
        },
        "schemas.Rack": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "uHeight": {
                    "type": "integer"
                }
            }
        },
        "schemas.RackCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "uHeight": {
                    "description": "default 42",
                    "type": "integer",
                    "maximum": 50
                }
            }
        },
        "schemas.RackElevation": {
            "type": "object",
            "properties": {
                "availablePositions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.RackElevationItem"
                    }
                },
                "name": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "uHeight": {
                    "type": "integer"
                }
            }
        },
        "schemas.RackElevationItem": {
            "type": "object",
            "properties": {
                "deviceId": {
                    "type": "string"
                },
                "deviceRole": {
                    "type": "string"
                },
                "managementIp": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operatingStatus": {
                    "type": "string"
                },
                "position": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "schemas.RackUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "uHeight": {
                    "type": "integer",
                    "maximum": 50
                }
            }
        },
        "schemas.RestconfCredential": {
            "type": "object",
            "properties": {
                "inheritFromOrg": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.RestconfCredentialCreate": {
            "type": "object",
            "required": [
                "password",
                "url",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.RestconfCredentialUpdate": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.Role": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.RoleCreate": {
            "type": "object",
            "required": [
                "menus",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "menus": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.RoleDetail": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Menu"
                    }
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.RoleShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.RoleUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "menus": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.ScanApCreate": {
            "type": "object",
            "required": [
                "siteId"
            ],
            "properties": {
                "siteId": {
                    "type": "string"
                }
            }
        },
        "schemas.ScanDevice": {
            "type": "object",
            "properties": {
                "chassisId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceModel": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                }
            }
        },
        "schemas.ScanDeviceBatchUpdate": {
            "type": "object",
            "required": [
                "deviceRole",
                "ids",
                "siteId",
                "status"
            ],
            "properties": {
                "deviceRole": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                }
            }
        },
        "schemas.ScanDeviceCreate": {
            "type": "object",
            "required": [
                "range"
            ],
            "properties": {
                "community": {
                    "type": "string"
                },
                "maxRepetitions": {
                    "type": "integer",
                    "maximum": 100
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535
                },
                "range": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeout": {
                    "type": "integer",
                    "maximum": 60
                }
            }
        },
        "schemas.ScanDeviceCreateResponse": {
            "type": "object",
            "properties": {
                "taskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.ScanDeviceDetailTask": {
            "type": "object",
            "required": [
                "siteId"
            ],
            "properties": {
                "siteId": {
                    "type": "string"
                }
            }
        },
        "schemas.ScanDeviceUpdate": {
            "type": "object",
            "required": [
                "deviceRole",
                "siteId",
                "status"
            ],
            "properties": {
                "deviceRole": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "rackId": {
                    "type": "string"
                },
                "rackPosition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                }
            }
        },
        "schemas.Server": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "disk": {
                    "description": "MB",
                    "type": "integer"
                },
                "healthStatus": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "memory": {
                    "description": "MB",
                    "type": "integer"
                },
                "monitorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operStatus": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "rackId": {
                    "type": "string"
                },
                "rackPosition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.ServerCreate": {
            "type": "object",
            "required": [
                "cpu",
                "disk",
                "managementIp",
                "memory",
                "name",
                "siteId",
                "status"
            ],
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "disk": {
                    "description": "MB",
                    "type": "integer"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "memory": {
                    "description": "MB",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "rackId": {
                    "type": "string"
                },
                "rackPosition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "siteId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                }
            }
        },
        "schemas.ServerUpdate": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "disk": {
                    "description": "MB",
                    "type": "integer"
                },
                "managementIp": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "memory": {
                    "description": "MB",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "rackId": {
                    "type": "string"
                },
                "rackPosition": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "serialNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                }
            }
        },
        "schemas.SiteCreate": {
            "type": "object",
            "required": [
                "address",
                "latitude",
                "longitude",
                "name",
                "region",
                "siteCode",
                "status",
                "timeZone"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "siteCode": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                },
                "timeZone": {
                    "type": "string"
                }
            }
        },
        "schemas.SiteDetail": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "apCount": {
                    "type": "integer"
                },
                "circuit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CircuitShort"
                    }
                },
                "circuitCount": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gatewayCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "rackCount": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "siteCode": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "switchCount": {
                    "type": "integer"
                },
                "timeZone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vlanCount": {
                    "type": "integer"
                }
            }
        },
        "schemas.SiteResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "circuit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CircuitShort"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "siteCode": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.SiteShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "siteCode": {
                    "type": "string"
                }
            }
        },
        "schemas.SiteUpdate": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "siteCode": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                },
                "timeZone": {
                    "type": "string"
                }
            }
        },
        "schemas.SnmpV2Credential": {
            "type": "object",
            "properties": {
                "community": {
                    "type": "string"
                },
                "inheritFromOrg": {
                    "type": "boolean"
                },
                "maxRepetitions": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "schemas.SnmpV2CredentialCreate": {
            "type": "object",
            "required": [
                "community"
            ],
            "properties": {
                "community": {
                    "type": "string"
                },
                "maxRepetitions": {
                    "description": "default is 50",
                    "type": "integer",
                    "maximum": 200
                },
                "port": {
                    "description": "default is 161",
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "timeout": {
                    "description": "default is 5",
                    "type": "integer",
                    "maximum": 30,
                    "minimum": 1
                }
            }
        },
        "schemas.SnmpV2CredentialUpdate": {
            "type": "object",
            "properties": {
                "community": {
                    "type": "string"
                },
                "maxRepetitions": {
                    "type": "integer",
                    "maximum": 200
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "timeout": {
                    "type": "integer",
                    "maximum": 30,
                    "minimum": 1
                }
            }
        },
        "schemas.Subscription": {
            "type": "object",
            "properties": {
                "channelConfig": {
                    "$ref": "#/definitions/schemas.ChannelConfig"
                },
                "channelType": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Condition"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "#/definitions/schemas.UserShort"
                },
                "deduplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "repeatInterval": {
                    "type": "integer"
                },
                "sendResolved": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "$ref": "#/definitions/schemas.UserShort"
                }
            }
        },
        "schemas.SubscriptionCreate": {
            "type": "object",
            "required": [
                "channelConfig",
                "channelType",
                "conditions",
                "deduplication",
                "enabled",
                "name",
                "repeatInterval",
                "sendResolved"
            ],
            "properties": {
                "channelConfig": {
                    "$ref": "#/definitions/schemas.ChannelConfig"
                },
                "channelType": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Condition"
                    }
                },
                "deduplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "repeatInterval": {
                    "type": "integer"
                },
                "sendResolved": {
                    "type": "boolean"
                }
            }
        },
        "schemas.SubscriptionUpdate": {
            "type": "object",
            "properties": {
                "channelConfig": {
                    "$ref": "#/definitions/schemas.ChannelConfig"
                },
                "channelType": {
                    "type": "string",
                    "enum": [
                        "Webhook",
                        "Email"
                    ]
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Condition"
                    }
                },
                "deduplication": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "repeatInterval": {
                    "type": "integer"
                },
                "sendResolved": {
                    "type": "boolean"
                }
            }
        },
        "schemas.SuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "schemas.Transition": {
            "type": "object",
            "properties": {
                "enterTransition": {
                    "type": "string"
                },
                "leaveTransition": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.User": {
            "type": "object",
            "properties": {
                "authType": {
                    "type": "integer"
                },
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/schemas.RoleShort"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.UserCreate": {
            "type": "object",
            "required": [
                "authType",
                "roleId",
                "status",
                "username"
            ],
            "properties": {
                "authType": {
                    "type": "integer",
                    "maximum": 4,
                    "minimum": 0
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.UserShort": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.UserUpdate": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Active",
                        "Inactive"
                    ]
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.UserUpdateMe": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "security.AccessToken": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "issuedAt": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "refreshTokenExpiresAt": {
                    "type": "string"
                },
                "refreshTokenIssuedAt": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                }
            }
        },
        "vtm.MatrixResponse": {
            "type": "object",
            "properties": {
                "legend": {
                    "type": "string"
                },
                "metric": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}