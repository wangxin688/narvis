definitions:
  alerts.AlertName:
    properties:
      description:
        $ref: '#/definitions/common.I18n'
      name:
        $ref: '#/definitions/alerts.AlertNameEnum'
      severity:
        $ref: '#/definitions/alerts.SeverityEnum'
      suggestion:
        $ref: '#/definitions/common.I18n'
      title:
        $ref: '#/definitions/common.I18n'
    type: object
  alerts.AlertNameEnum:
    enum:
    - high_cpu_utilization
    - high_memory_utilization
    - high_disk_utilization
    - high_system_load
    - high_channel_utilization
    - high_channel_interference
    - high_channel_noise
    - high_client_number
    - high_bandwidth_usage
    - high_error_rate
    - high_icmp_ping_response_time
    - high_icmp_ping_loss
    - high_temperature
    - fan_status_abnormal
    - power_status_abnormal
    - interface_down
    - interface_half_duplex
    - no_snmp_data_collection
    - unavailable_by_icmp_ping
    - wireless_access_point_down
    - unknown
    - high_swap_space_utilization
    - high_system_load_average
    - high_inode_utilization
    type: string
    x-enum-varnames:
    - HighCpuUtilization
    - HighMemoryUtilization
    - HighDiskUtilization
    - HighSystemLoad
    - HighChannelUtilization
    - HighChannelInterference
    - HighChannelNoise
    - HighClientNumber
    - HighBandwidthUtilization
    - HighErrorRate
    - HighICMPLatency
    - HighICMPPacketLoss
    - HighTemperature
    - AbnormalFanStatus
    - AbnormalPowerStatus
    - InterfaceDown
    - InterfaceHalfDuplex
    - SnmpAgentTimeout
    - NodePingTimeout
    - ApDown
    - Unknown
    - HighSwapSpaceUtilization
    - HighSystemLoadAverage
    - HighINodeUtilization
  alerts.SeverityEnum:
    enum:
    - P1
    - P2
    - P3
    - P4
    type: string
    x-enum-varnames:
    - SeverityDisaster
    - SeverityCritical
    - SeverityWarning
    - SeverityInfo
  am.Alert:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      endsAt:
        description: rfc3339
        type: string
      generatorURL:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      startsAt:
        description: rfc3339
        type: string
      status:
        type: string
    type: object
  common.I18n:
    properties:
      en:
        type: string
      zh:
        type: string
    type: object
  devicerole.DeviceRole:
    properties:
      description:
        $ref: '#/definitions/common.I18n'
      device_role:
        $ref: '#/definitions/devicerole.DeviceRoleEnum'
      product_family:
        $ref: '#/definitions/devicerole.ProductFamilyEnum'
      weight:
        type: integer
    type: object
  devicerole.DeviceRoleEnum:
    enum:
    - WanRouter
    - Firewall
    - InternetSwitch
    - CoreSwitch
    - DistributionSwitch
    - AccessSwitch
    - WlanAC
    - WlanAP
    - Server
    - Unknown
    type: string
    x-enum-varnames:
    - WanRouter
    - Firewall
    - InternetSwitch
    - CoreSwitch
    - DistributionSwitch
    - AccessSwitch
    - WlanAC
    - WlanAP
    - Server
    - UnknownDeviceRole
  devicerole.ProductFamilyEnum:
    enum:
    - Gateway
    - Switching
    - Wireless
    - Computing
    - Unknown
    type: string
    x-enum-varnames:
    - Gateway
    - Switching
    - Wireless
    - Computing
    - UnknownProductFamily
  intendtask.ApScanResponse:
    properties:
      deviceModel:
        type: string
      groupName:
        type: string
      macAddress:
        type: string
      managementIp:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      organizationId:
        type: string
      osVersion:
        type: string
      serialNumber:
        type: string
      siteId:
        type: string
      wlanACIpAddress:
        type: string
    type: object
  intendtask.ArpItem:
    properties:
      hashValue:
        type: string
      ifIndex:
        type: integer
      ipAddress:
        type: string
      macAddress:
        type: string
      range:
        type: string
      type:
        type: string
      vlanId:
        type: integer
    type: object
  intendtask.ConfigurationBackupTaskResult:
    properties:
      backupTime:
        type: string
      configuration:
        type: string
      deviceId:
        type: string
      error:
        type: string
      hashValue:
        type: string
    type: object
  intendtask.DeviceBasicInfoScanResponse:
    properties:
      chassisId:
        type: string
      description:
        type: string
      deviceModel:
        type: string
      errors:
        items:
          type: string
        type: array
      managementIp:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      organizationId:
        type: string
      platform:
        type: string
    type: object
  intendtask.DeviceInterface:
    properties:
      hashValue:
        type: string
      ifAdminStatus:
        type: string
      ifDescr:
        type: string
      ifHighSpeed:
        type: integer
      ifIndex:
        type: integer
      ifIpAddress:
        type: string
      ifLastChange:
        type: integer
      ifMtu:
        type: integer
      ifName:
        type: string
      ifOperStatus:
        type: string
      ifPhysAddr:
        type: string
      ifSpeed:
        type: integer
      ifType:
        type: string
    type: object
  intendtask.DeviceScanResponse:
    properties:
      arpTable:
        items:
          $ref: '#/definitions/intendtask.ArpItem'
        type: array
      chassisId:
        type: string
      description:
        type: string
      deviceId:
        type: string
      deviceModel:
        type: string
      entities:
        items:
          $ref: '#/definitions/intendtask.Entity'
        type: array
      errors:
        items:
          type: string
        type: array
      icmpReachable:
        type: boolean
      interfaces:
        items:
          $ref: '#/definitions/intendtask.DeviceInterface'
        type: array
      lldpNeighbors:
        items:
          $ref: '#/definitions/intendtask.LldpNeighbor'
        type: array
      managementIp:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      organizationId:
        type: string
      platform:
        type: string
      siteId:
        type: string
      snmpReachable:
        type: boolean
      sshReachable:
        type: boolean
      stacks:
        items:
          $ref: '#/definitions/intendtask.Stack'
        type: array
      vlans:
        items:
          $ref: '#/definitions/intendtask.VlanItem'
        type: array
    type: object
  intendtask.Entity:
    properties:
      entityPhysicalClass:
        type: string
      entityPhysicalDescr:
        type: string
      entityPhysicalName:
        type: string
      entityPhysicalSerialNum:
        type: string
      entityPhysicalSoftwareRev:
        type: string
    type: object
  intendtask.LldpNeighbor:
    properties:
      hashValue:
        type: string
      localChassisId:
        type: string
      localHostname:
        type: string
      localIfDescr:
        type: string
      localIfName:
        type: string
      remoteChassisId:
        type: string
      remoteHostname:
        type: string
      remoteIfDescr:
        type: string
      remoteIfName:
        type: string
    type: object
  intendtask.Stack:
    properties:
      id:
        type: string
      macAddress:
        type: string
      priority:
        type: integer
      role:
        type: string
    type: object
  intendtask.VlanItem:
    properties:
      gateway:
        type: string
      ifIndex:
        type: integer
      range:
        type: string
      vlanId:
        type: integer
      vlanName:
        type: string
    type: object
  intendtask.WlanUserItem:
    properties:
      stationApMac:
        description: AP MAC
        type: string
      stationApName:
        description: AP 名称
        type: string
      stationChanBandWidth:
        description: 信道带宽
        type: string
      stationChannel:
        description: 信道
        type: integer
      stationESSID:
        description: ESSID
        type: string
      stationIp:
        description: 终端IP
        type: string
      stationMac:
        description: 终端MAC
        type: string
      stationMaxSpeed:
        description: 终端协商速率
        type: integer
      stationOnlineTime:
        description: 终端在线时间
        type: integer
      stationRSSI:
        description: 终端RSSI
        type: integer
      stationRadioType:
        description: radio类型
        type: string
      stationRxBits:
        description: 终端下行流量
        type: integer
      stationSNR:
        description: 终端NR
        type: integer
      stationTxBits:
        description: 终端上行流量
        type: integer
      stationUsername:
        description: 终端用户名
        type: string
      stationVlan:
        description: VLAN
        type: integer
    type: object
  intendtask.WlanUserTaskResult:
    properties:
      deviceId:
        type: string
      errors:
        items:
          type: string
        type: array
      organizationId:
        type: string
      siteId:
        type: string
      wlanUsers:
        items:
          $ref: '#/definitions/intendtask.WlanUserItem'
        type: array
    type: object
  schemas.AP:
    properties:
      coordinateX:
        type: number
      coordinateY:
        type: number
      coordinateZ:
        type: number
      createdAt:
        type: string
      deviceRole:
        type: string
      deviceType:
        type: string
      floor:
        type: string
      groupName:
        type: string
      healthStatus:
        type: string
      id:
        type: string
      macAddress:
        type: string
      managementIp:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      operStatus:
        type: string
      osVersion:
        type: string
      serialNumber:
        type: string
      siteId:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      wlanACIpAddress:
        type: string
    type: object
  schemas.ActionLogCreate:
    properties:
      acknowledged:
        type: boolean
      alertIds:
        items:
          type: string
        type: array
      assignUserId:
        type: string
      comment:
        type: string
      resolved:
        type: boolean
      rootCauseId:
        type: string
      suppressed:
        type: boolean
    required:
    - alertIds
    type: object
  schemas.Alert:
    properties:
      acknowledged:
        type: boolean
      actionLogCount:
        type: integer
      alertName:
        $ref: '#/definitions/alerts.AlertName'
      deviceRole:
        type: string
      duration:
        type: string
      entity:
        $ref: '#/definitions/schemas.Entity'
      id:
        type: string
      labels:
        items:
          $ref: '#/definitions/schemas.Label'
        type: array
      resolvedAt:
        type: string
      severity:
        type: string
      site:
        $ref: '#/definitions/schemas.SiteShort'
      startedAt:
        type: string
      status:
        type: integer
      suppressed:
        type: boolean
      user:
        $ref: '#/definitions/schemas.UserShort'
    type: object
  schemas.AlertCreate:
    properties:
      alertName:
        type: string
      eventId:
        type: string
      hostId:
        type: string
      severity:
        enum:
        - P1
        - P2
        - P3
        - P4
        type: string
      startedAt:
        type: string
      status:
        enum:
        - PROBLEM
        - OK
        type: string
      tags:
        items:
          $ref: '#/definitions/schemas.Label'
        type: array
      triggerId:
        type: string
    required:
    - alertName
    - eventId
    - hostId
    - status
    - triggerId
    type: object
  schemas.AlertGroupCreate:
    properties:
      alerts:
        items:
          $ref: '#/definitions/am.Alert'
        type: array
      commonAnnotations:
        additionalProperties:
          type: string
        type: object
      commonLabels:
        additionalProperties:
          type: string
        type: object
      externalURL:
        type: string
      groupKey:
        type: string
      groupLabels:
        additionalProperties:
          type: string
        type: object
      status:
        enum:
        - firing
        - resolved
        type: string
    required:
    - alerts
    - status
    type: object
  schemas.ApBatchUpdate:
    properties:
      coordinateX:
        type: number
      coordinateY:
        type: number
      coordinateZ:
        type: number
      floor:
        type: string
      ids:
        items:
          type: string
        type: array
      status:
        enum:
        - Active
        - Inactive
        type: string
    required:
    - ids
    type: object
  schemas.ApUpdate:
    properties:
      coordinateX:
        type: number
      coordinateY:
        type: number
      coordinateZ:
        type: number
      floor:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
    type: object
  schemas.AuthConfig:
    properties:
      clientId:
        type: string
      clientSecret:
        type: string
    type: object
  schemas.ChannelConfig:
    properties:
      email:
        type: string
      webhook:
        type: string
      webhook_headers:
        additionalProperties:
          type: string
        type: object
    type: object
  schemas.Circuit:
    properties:
      cid:
        type: string
      circuitType:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      ipv4Address:
        type: string
      ipv6Address:
        type: string
      monitorHostId:
        type: string
      monitorId:
        type: string
      name:
        type: string
      provider:
        type: string
      rxBandWidth:
        type: integer
      status:
        type: string
      txBandWidth:
        type: integer
      updatedAt:
        type: string
    type: object
  schemas.CircuitCreate:
    properties:
      cid:
        type: string
      circuitType:
        enum:
        - Internet
        - MPLS
        - IEPL
        - DPLC
        - DarkFiber
        - ADSL
        type: string
      description:
        type: string
      interfaceId:
        type: string
      ipv4Address:
        type: string
      ipv6Address:
        type: string
      name:
        type: string
      provider:
        type: string
      rxBandWidth:
        maximum: 800000
        minimum: 1
        type: integer
      status:
        enum:
        - Active
        - Inactive
        type: string
      txBandWidth:
        maximum: 800000
        minimum: 1
        type: integer
    required:
    - cid
    - circuitType
    - interfaceId
    - name
    - provider
    - rxBandWidth
    - status
    - txBandWidth
    type: object
  schemas.CircuitShort:
    properties:
      RxBandWidth:
        type: integer
      TxBandWidth:
        type: integer
      id:
        type: string
      name:
        type: string
      provider:
        type: string
    type: object
  schemas.CircuitUpdate:
    properties:
      cid:
        type: string
      circuitType:
        enum:
        - Internet
        - Intranet
        type: string
      description:
        type: string
      interfaceId:
        type: string
      ipv4Address:
        type: string
      ipv6Address:
        type: string
      name:
        type: string
      provider:
        type: string
      rxBandWidth:
        type: integer
      status:
        enum:
        - Active
        - Inactive
        type: string
      txBandWidth:
        type: integer
    type: object
  schemas.CliCredential:
    properties:
      inheritFromOrg:
        type: boolean
      password:
        type: string
      port:
        type: integer
      username:
        type: string
    type: object
  schemas.CliCredentialCreate:
    properties:
      password:
        type: string
      port:
        description: default is 22
        maximum: 65535
        minimum: 1
        type: integer
      username:
        type: string
    required:
    - password
    - username
    type: object
  schemas.CliCredentialUpdate:
    properties:
      password:
        type: string
      port:
        maximum: 65535
        minimum: 1
        type: integer
      username:
        type: string
    type: object
  schemas.Condition:
    properties:
      item:
        type: string
      value:
        description: '["*"] means match all'
        items:
          type: string
        type: array
    required:
    - item
    - value
    type: object
  schemas.ConfigBackUpCreate:
    properties:
      siteId:
        type: string
    required:
    - siteId
    type: object
  schemas.Device:
    properties:
      createdAt:
        type: string
      description:
        type: string
      deviceModel:
        type: string
      deviceRole:
        type: string
      healthStatus:
        type: string
      id:
        type: string
      location:
        type: string
      managementIp:
        type: string
      manufacturer:
        type: string
      monitorId:
        type: string
      name:
        type: string
      operStatus:
        type: string
      osPatch:
        type: string
      osVersion:
        type: string
      platform:
        type: string
      rackId:
        type: string
      rackPosition:
        items:
          type: integer
        type: array
      serialNumber:
        type: string
      siteId:
        type: string
      status:
        type: string
      templateId:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.DeviceCreate:
    properties:
      Platform:
        type: string
      chassisId:
        type: string
      description:
        type: string
      deviceModel:
        type: string
      deviceRole:
        type: string
      location:
        type: string
      managementIp:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      osVersion:
        type: string
      rackId:
        type: string
      rackPosition:
        items:
          type: integer
        type: array
      serialNumber:
        type: string
      siteId:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
    required:
    - deviceRole
    - managementIp
    - name
    - siteId
    - status
    type: object
  schemas.DeviceInterface:
    properties:
      createdAt:
        type: string
      id:
        type: string
      ifAdminStatus:
        type: string
      ifDescr:
        type: string
      ifHighSpeed:
        type: integer
      ifIndex:
        type: integer
      ifIpAddress:
        type: string
      ifLastChange:
        type: string
      ifMtu:
        type: integer
      ifName:
        type: string
      ifOperStatus:
        type: string
      ifPhysAddr:
        type: string
      ifSpeed:
        type: integer
      ifType:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.DeviceUpdate:
    properties:
      description:
        type: string
      deviceModel:
        type: string
      deviceRole:
        type: string
      location:
        type: string
      managementIp:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      osVersion:
        type: string
      rackId:
        type: string
      rackPosition:
        items:
          type: integer
        type: array
      serialNumber:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
    type: object
  schemas.Entity:
    properties:
      Id:
        type: string
      Name:
        type: string
      Type:
        type: string
    type: object
  schemas.HealthHeatMap:
    properties:
      good:
        type: integer
      needsAttention:
        type: integer
      poor:
        type: integer
      unhealthy:
        type: integer
      unknown:
        type: integer
    type: object
  schemas.IdResponse:
    properties:
      id:
        type: string
    type: object
  schemas.IdsResponse:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  schemas.IpAddress:
    properties:
      address:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      macAddress:
        type: string
      range:
        type: string
      siteId:
        type: string
      status:
        description: Active, Reserved, Deprecated
        type: string
      type:
        description: Dynamic, Static, Gateway, Broadcast, NetworkId
        type: string
      updatedAt:
        type: string
      vlan:
        type: integer
    type: object
  schemas.IpAddressCreate:
    properties:
      address:
        type: string
      description:
        type: string
      macAddress:
        type: string
      range:
        type: string
      siteId:
        type: string
      status:
        enum:
        - Active
        - Reserved
        - Deprecated
        type: string
      type:
        enum:
        - Dynamic
        - Static
        - Gateway
        - Broadcast
        - NetworkId
        type: string
      vlan:
        type: integer
    required:
    - address
    - siteId
    - status
    - type
    type: object
  schemas.IpAddressUpdate:
    properties:
      address:
        type: string
      description:
        type: string
      macAddress:
        type: string
      range:
        type: string
      siteId:
        type: string
      status:
        enum:
        - Active
        - Reserved
        - Deprecated
        type: string
      type:
        enum:
        - Dynamic
        - Static
        - Gateway
        - Broadcast
        - NetworkId
        type: string
      vlan:
        type: integer
    type: object
  schemas.Label:
    properties:
      tag:
        type: string
      value:
        type: string
    required:
    - tag
    - value
    type: object
  schemas.ListResponse:
    properties:
      results: {}
      total:
        type: integer
    type: object
  schemas.Maintenance:
    properties:
      conditions:
        items:
          $ref: '#/definitions/schemas.Condition'
        type: array
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/schemas.UserShort'
      description:
        type: string
      endedAt:
        type: string
      id:
        type: string
      maintenanceType:
        type: string
      name:
        type: string
      startedAt:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/schemas.UserShort'
    type: object
  schemas.MaintenanceCreate:
    properties:
      conditions:
        items:
          $ref: '#/definitions/schemas.Condition'
        type: array
      description:
        type: string
      endedAt:
        type: string
      maintenanceType:
        type: string
      name:
        type: string
      startedAt:
        type: string
    required:
    - conditions
    - endedAt
    - maintenanceType
    - name
    - startedAt
    type: object
  schemas.MaintenanceUpdate:
    properties:
      conditions:
        items:
          $ref: '#/definitions/schemas.Condition'
        type: array
      description:
        type: string
      endedAt:
        type: string
      maintenanceType:
        type: string
      name:
        type: string
      startedAt:
        type: string
    type: object
  schemas.Menu:
    properties:
      children:
        items:
          $ref: '#/definitions/schemas.Menu'
        type: array
      createdAt:
        type: string
      id:
        type: string
      meta:
        $ref: '#/definitions/schemas.Meta'
      name:
        type: string
      parentId:
        type: string
      path:
        type: string
      redirect:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.Meta:
    properties:
      activePath:
        type: string
      auths:
        items:
          type: string
        type: array
      dynamicLevel:
        type: integer
      extraIcon:
        type: string
      frameLoading:
        type: boolean
      frameSrc:
        type: string
      hiddenTag:
        type: boolean
      icon:
        type: string
      keepAlive:
        type: boolean
      rank:
        type: integer
      roles:
        items:
          type: string
        type: array
      showLink:
        type: boolean
      showParent:
        type: boolean
      title:
        type: string
      transition:
        $ref: '#/definitions/schemas.Transition'
    type: object
  schemas.Oauth2PasswordRequest:
    properties:
      domainName:
        type: string
      enterpriseCode:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  schemas.Oauth2RefreshRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  schemas.Organization:
    properties:
      active:
        type: boolean
      authConfig:
        $ref: '#/definitions/schemas.AuthConfig'
      authType:
        description: '0: local 1: slack 2: google 3: teams 4: github'
        maximum: 4
        minimum: 0
        type: integer
      createdAt:
        type: string
      domainName:
        type: string
      enterpriseCode:
        type: string
      id:
        type: string
      licenseCount:
        maximum: 10000
        minimum: 0
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    required:
    - active
    - authType
    - domainName
    - enterpriseCode
    - id
    - licenseCount
    - name
    type: object
  schemas.Prefix:
    properties:
      createdAt:
        type: string
      gateway:
        type: string
      id:
        type: string
      range:
        type: string
      siteId:
        type: string
      type:
        type: string
      updatedAt:
        type: string
      utilization:
        description: percentage
        type: number
      version:
        type: string
      vlanId:
        type: integer
      vlanName:
        type: string
    type: object
  schemas.PrefixCreate:
    properties:
      gateway:
        type: string
      range:
        type: string
      siteId:
        type: string
      type:
        enum:
        - Dynamic
        - Static
        type: string
      vlanId:
        description: not support VxLAN now
        maximum: 4094
        minimum: 1
        type: integer
      vlanName:
        type: string
    required:
    - range
    - siteId
    - type
    type: object
  schemas.PrefixUpdate:
    properties:
      gateway:
        type: string
      range:
        type: string
      siteId:
        type: string
      type:
        enum:
        - Dynamic
        - Static
        type: string
      vlanId:
        maximum: 4094
        type: integer
      vlanName:
        type: string
    type: object
  schemas.Rack:
    properties:
      id:
        type: string
      name:
        type: string
      serialNumber:
        type: string
      siteId:
        type: string
      uHeight:
        type: integer
    type: object
  schemas.RackCreate:
    properties:
      name:
        type: string
      serialNumber:
        type: string
      siteId:
        type: string
      uHeight:
        description: default 42
        maximum: 50
        type: integer
    required:
    - name
    type: object
  schemas.RackElevation:
    properties:
      availablePositions:
        items:
          type: integer
        type: array
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/schemas.RackElevationItem'
        type: array
      name:
        type: string
      serialNumber:
        type: string
      siteId:
        type: string
      uHeight:
        type: integer
    type: object
  schemas.RackElevationItem:
    properties:
      deviceId:
        type: string
      deviceRole:
        type: string
      managementIp:
        type: string
      name:
        type: string
      operatingStatus:
        type: string
      position:
        items:
          type: integer
        type: array
    type: object
  schemas.RackUpdate:
    properties:
      name:
        type: string
      serialNumber:
        type: string
      uHeight:
        maximum: 50
        type: integer
    type: object
  schemas.RestconfCredential:
    properties:
      inheritFromOrg:
        type: boolean
      password:
        type: string
      url:
        type: string
      username:
        type: string
    type: object
  schemas.RestconfCredentialCreate:
    properties:
      password:
        type: string
      url:
        type: string
      username:
        type: string
    required:
    - password
    - url
    - username
    type: object
  schemas.RestconfCredentialUpdate:
    properties:
      password:
        type: string
      url:
        type: string
      username:
        type: string
    type: object
  schemas.Role:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.RoleCreate:
    properties:
      description:
        type: string
      menus:
        items:
          type: string
        type: array
      name:
        type: string
    required:
    - menus
    - name
    type: object
  schemas.RoleDetail:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      menus:
        items:
          $ref: '#/definitions/schemas.Menu'
        type: array
      name:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.RoleShort:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  schemas.RoleUpdate:
    properties:
      description:
        type: string
      menus:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  schemas.ScanApCreate:
    properties:
      siteId:
        type: string
    required:
    - siteId
    type: object
  schemas.ScanDevice:
    properties:
      chassisId:
        type: string
      createdAt:
        type: string
      description:
        type: string
      deviceModel:
        type: string
      id:
        type: string
      managementIp:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      platform:
        type: string
    type: object
  schemas.ScanDeviceBatchUpdate:
    properties:
      deviceRole:
        type: string
      floor:
        type: string
      ids:
        items:
          type: string
        type: array
      siteId:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
    required:
    - deviceRole
    - ids
    - siteId
    - status
    type: object
  schemas.ScanDeviceCreate:
    properties:
      community:
        type: string
      maxRepetitions:
        maximum: 100
        type: integer
      port:
        maximum: 65535
        type: integer
      range:
        items:
          type: string
        type: array
      timeout:
        maximum: 60
        type: integer
    required:
    - range
    type: object
  schemas.ScanDeviceCreateResponse:
    properties:
      taskIds:
        items:
          type: string
        type: array
    type: object
  schemas.ScanDeviceDetailTask:
    properties:
      siteId:
        type: string
    required:
    - siteId
    type: object
  schemas.ScanDeviceUpdate:
    properties:
      deviceRole:
        type: string
      floor:
        type: string
      rackId:
        type: string
      rackPosition:
        items:
          type: integer
        type: array
      siteId:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
    required:
    - deviceRole
    - siteId
    - status
    type: object
  schemas.Server:
    properties:
      cpu:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      disk:
        description: MB
        type: integer
      healthStatus:
        type: string
      id:
        type: string
      managementIp:
        type: string
      manufacturer:
        type: string
      memory:
        description: MB
        type: integer
      monitorId:
        type: string
      name:
        type: string
      operStatus:
        type: string
      osVersion:
        type: string
      rackId:
        type: string
      rackPosition:
        items:
          type: integer
        type: array
      serialNumber:
        type: string
      siteId:
        type: string
      status:
        type: string
      templateId:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.ServerCreate:
    properties:
      cpu:
        type: integer
      description:
        type: string
      disk:
        description: MB
        type: integer
      managementIp:
        type: string
      manufacturer:
        type: string
      memory:
        description: MB
        type: integer
      name:
        type: string
      osVersion:
        type: string
      rackId:
        type: string
      rackPosition:
        items:
          type: integer
        type: array
      siteId:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
    required:
    - cpu
    - disk
    - managementIp
    - memory
    - name
    - siteId
    - status
    type: object
  schemas.ServerUpdate:
    properties:
      cpu:
        type: integer
      description:
        type: string
      disk:
        description: MB
        type: integer
      managementIp:
        type: string
      manufacturer:
        type: string
      memory:
        description: MB
        type: integer
      name:
        type: string
      osVersion:
        type: string
      rackId:
        type: string
      rackPosition:
        items:
          type: integer
        type: array
      serialNumber:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
    type: object
  schemas.SiteCreate:
    properties:
      address:
        type: string
      description:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      region:
        type: string
      siteCode:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
      timeZone:
        type: string
    required:
    - address
    - latitude
    - longitude
    - name
    - region
    - siteCode
    - status
    - timeZone
    type: object
  schemas.SiteDetail:
    properties:
      address:
        type: string
      apCount:
        type: integer
      circuit:
        items:
          $ref: '#/definitions/schemas.CircuitShort'
        type: array
      circuitCount:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      gatewayCount:
        type: integer
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      rackCount:
        type: integer
      region:
        type: string
      siteCode:
        type: string
      status:
        type: string
      switchCount:
        type: integer
      timeZone:
        type: string
      updatedAt:
        type: string
      vlanCount:
        type: integer
    type: object
  schemas.SiteResponse:
    properties:
      address:
        type: string
      circuit:
        items:
          $ref: '#/definitions/schemas.CircuitShort'
        type: array
      createdAt:
        type: string
      description:
        type: string
      deviceCount:
        type: integer
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      region:
        type: string
      siteCode:
        type: string
      status:
        type: string
      timeZone:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.SiteShort:
    properties:
      id:
        type: string
      name:
        type: string
      siteCode:
        type: string
    type: object
  schemas.SiteUpdate:
    properties:
      address:
        type: string
      description:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      region:
        type: string
      siteCode:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
      timeZone:
        type: string
    type: object
  schemas.SnmpV2Credential:
    properties:
      community:
        type: string
      inheritFromOrg:
        type: boolean
      maxRepetitions:
        type: integer
      port:
        type: integer
      timeout:
        type: integer
    type: object
  schemas.SnmpV2CredentialCreate:
    properties:
      community:
        type: string
      maxRepetitions:
        description: default is 50
        maximum: 200
        type: integer
      port:
        description: default is 161
        maximum: 65535
        minimum: 1
        type: integer
      timeout:
        description: default is 5
        maximum: 30
        minimum: 1
        type: integer
    required:
    - community
    type: object
  schemas.SnmpV2CredentialUpdate:
    properties:
      community:
        type: string
      maxRepetitions:
        maximum: 200
        type: integer
      port:
        maximum: 65535
        minimum: 1
        type: integer
      timeout:
        maximum: 30
        minimum: 1
        type: integer
    type: object
  schemas.Subscription:
    properties:
      channelConfig:
        $ref: '#/definitions/schemas.ChannelConfig'
      channelType:
        type: string
      conditions:
        items:
          $ref: '#/definitions/schemas.Condition'
        type: array
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/schemas.UserShort'
      deduplication:
        type: boolean
      enabled:
        type: boolean
      id:
        type: string
      name:
        type: string
      repeatInterval:
        type: integer
      sendResolved:
        type: boolean
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/schemas.UserShort'
    type: object
  schemas.SubscriptionCreate:
    properties:
      channelConfig:
        $ref: '#/definitions/schemas.ChannelConfig'
      channelType:
        type: string
      conditions:
        items:
          $ref: '#/definitions/schemas.Condition'
        type: array
      deduplication:
        type: boolean
      enabled:
        type: boolean
      name:
        type: string
      repeatInterval:
        type: integer
      sendResolved:
        type: boolean
    required:
    - channelConfig
    - channelType
    - conditions
    - deduplication
    - enabled
    - name
    - repeatInterval
    - sendResolved
    type: object
  schemas.SubscriptionUpdate:
    properties:
      channelConfig:
        $ref: '#/definitions/schemas.ChannelConfig'
      channelType:
        enum:
        - Webhook
        - Email
        type: string
      conditions:
        items:
          $ref: '#/definitions/schemas.Condition'
        type: array
      deduplication:
        type: boolean
      enabled:
        type: boolean
      name:
        type: string
      repeatInterval:
        type: integer
      sendResolved:
        type: boolean
    type: object
  schemas.SuccessResponse:
    properties:
      status:
        type: string
    type: object
  schemas.Transition:
    properties:
      enterTransition:
        type: string
      leaveTransition:
        type: string
      name:
        type: string
    type: object
  schemas.User:
    properties:
      authType:
        type: integer
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      role:
        $ref: '#/definitions/schemas.RoleShort'
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  schemas.UserCreate:
    properties:
      authType:
        maximum: 4
        minimum: 0
        type: integer
      avatar:
        type: string
      email:
        type: string
      password:
        type: string
      roleId:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
      username:
        type: string
    required:
    - authType
    - roleId
    - status
    - username
    type: object
  schemas.UserShort:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  schemas.UserUpdate:
    properties:
      avatar:
        type: string
      email:
        type: string
      password:
        type: string
      roleId:
        type: string
      status:
        enum:
        - Active
        - Inactive
        type: string
      username:
        type: string
    type: object
  schemas.UserUpdateMe:
    properties:
      avatar:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  security.AccessToken:
    properties:
      accessToken:
        type: string
      expiresAt:
        type: string
      issuedAt:
        type: string
      refreshToken:
        type: string
      refreshTokenExpiresAt:
        type: string
      refreshTokenIssuedAt:
        type: string
      tokenType:
        type: string
    type: object
  vtm.MatrixResponse:
    properties:
      legend:
        type: string
      metric:
        additionalProperties:
          type: string
        type: object
      value:
        items:
          items: {}
          type: array
        type: array
    type: object
info:
  contact:
    name: Jeffry
  description: Narvis OpenAPI for developers.
  termsOfService: http://swagger.io/terms/
  title: Narvis API
  version: "1.0"
paths:
  /admin/roles:
    get:
      X-func:
        name: ListUserRoles
      consumes:
      - application/json
      description: list roles
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: id
        type: array
      - in: query
        name: keyword
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: name
        type: array
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Role'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List roles
      tags:
      - Admin
    post:
      X-func:
        name: CreateUserRole
      consumes:
      - application/json
      description: create role
      parameters:
      - description: role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/schemas.RoleCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Role'
      security:
      - BearerAuth: []
      summary: Create role
      tags:
      - Admin
  /admin/roles/{id}:
    delete:
      X-func:
        name: DeleteUserRole
      consumes:
      - application/json
      description: delete role
      parameters:
      - description: uuid formatted role id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Role'
      security:
      - BearerAuth: []
      summary: Delete role
      tags:
      - Admin
    get:
      X-func:
        name: GetUserRole
      consumes:
      - application/json
      description: get role
      parameters:
      - description: uuid formatted role id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RoleDetail'
      security:
      - BearerAuth: []
      summary: Get role
      tags:
      - Admin
    put:
      X-func:
        name: UpdateUserRole
      consumes:
      - application/json
      description: update role
      parameters:
      - description: uuid formatted role id
        in: path
        name: id
        required: true
        type: string
      - description: role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/schemas.RoleUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Role'
      security:
      - BearerAuth: []
      summary: Update role
      tags:
      - Admin
  /admin/users:
    get:
      X-func:
        name: ListUsers
      consumes:
      - application/json
      parameters:
      - in: query
        maximum: 4
        minimum: 0
        name: authType
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: email
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: id
        type: array
      - in: query
        name: keyword
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: roleId
        type: array
      - enum:
        - Active
        - Inactive
        in: query
        name: status
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: username
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.User'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - Admin
    post:
      X-func:
        name: CreateUser
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create new user
      tags:
      - Admin
  /admin/users/{id}:
    delete:
      X-func:
        name: DeleteUser
      consumes:
      - application/json
      parameters:
      - description: uuid formatted user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - Admin
    get:
      X-func:
        name: GetUser
      consumes:
      - application/json
      parameters:
      - description: uuid formatted user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
      security:
      - BearerAuth: []
      summary: Get user
      tags:
      - Admin
    put:
      X-func:
        name: UpdateUser
      consumes:
      - application/json
      parameters:
      - description: uuid formatted user id
        in: path
        name: id
        required: true
        type: string
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - Admin
  /admin/users/me:
    get:
      X-func:
        name: GetUserMe
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
      security:
      - BearerAuth: []
      summary: Get user me
      tags:
      - Admin
    put:
      X-func:
        name: UpdateUserMe
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.UserUpdateMe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update user me
      tags:
      - Admin
  /alert/action-logs:
    post:
      X-func:
        name: CreateActionLog
      consumes:
      - application/json
      description: Create Action Log
      parameters:
      - description: Create Action Log
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/schemas.ActionLogCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create Action Log
      tags:
      - Alert
  /alert/alert-groups:
    post:
      X-func:
        name: CreateAlertGroup
      consumes:
      - application/json
      description: Create Alert Group
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.AlertGroupCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create Alert Group
      tags:
      - Alert
  /alert/alerts:
    get:
      X-func:
        name: ListAlerts
      consumes:
      - application/json
      description: List Alerts
      parameters:
      - in: query
        name: acknowledged
        type: boolean
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: alertName
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: apId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: circuitId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceInterfaceId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceRole
        type: array
      - in: query
        name: endsAtGte
        type: string
      - in: query
        name: endsAtLte
        type: string
      - in: query
        name: keyword
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: severity
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: siteId
        type: array
      - in: query
        name: startedAtGte
        type: string
      - in: query
        name: startedAtLte
        type: string
      - in: query
        name: status
        type: integer
      - in: query
        name: suppressed
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Alert'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List Alerts
      tags:
      - Alert
    post:
      X-func:
        name: CreateAlert
      consumes:
      - application/json
      description: Create Alert
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.AlertCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      summary: Create Alert
      tags:
      - Alert
  /alert/alerts/{id}:
    get:
      X-func:
        name: GetAlert
      consumes:
      - application/json
      description: Get Alert
      parameters:
      - description: uuid formatted alertId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Alert'
      security:
      - BearerAuth: []
      summary: Get Alert
      tags:
      - Alert
  /alert/maintenances:
    get:
      X-func:
        name: ListMaintenances
      consumes:
      - application/json
      description: List Maintenances
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: id
        type: array
      - in: query
        name: keyword
        type: string
      - in: query
        name: maintenanceType
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: siteId
        type: array
      - enum:
        - Approaching
        - Active
        - Expired
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Maintenance'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List Maintenances
      tags:
      - Alert
    post:
      X-func:
        name: CreateMaintenance
      consumes:
      - application/json
      description: Create Maintenance
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.MaintenanceCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create Maintenance
      tags:
      - Alert
  /alert/maintenances/{id}:
    delete:
      X-func:
        name: DeleteMaintenance
      consumes:
      - application/json
      description: Delete Maintenance
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete Maintenance
      tags:
      - Alert
    get:
      X-func:
        name: GetMaintenance
      consumes:
      - application/json
      description: Get Maintenance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Maintenance'
      security:
      - BearerAuth: []
      summary: Get Maintenance
      tags:
      - Alert
    put:
      X-func:
        name: UpdateMaintenance
      consumes:
      - application/json
      description: Update Maintenance
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.MaintenanceUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update Maintenance
      tags:
      - Alert
  /alert/subscriptions:
    get:
      X-func:
        name: ListSubscriptions
      consumes:
      - application/json
      description: List Subscriptions
      parameters:
      - enum:
        - Webhook
        - Email
        in: query
        name: channelType
        type: string
      - in: query
        name: enabled
        type: boolean
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: id
        type: array
      - in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Subscription'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List Subscriptions
      tags:
      - Alert
    post:
      X-func:
        name: CreateSubscription
      consumes:
      - application/json
      description: Create Subscription
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.SubscriptionCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create Subscription
      tags:
      - Alert
  /alert/subscriptions/{id}:
    delete:
      X-func:
        name: DeleteSubscription
      consumes:
      - application/json
      description: Delete Subscription
      parameters:
      - description: uuid formatted subscriptionId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Delete Subscription
      tags:
      - Alert
    get:
      X-func:
        name: GetSubscription
      consumes:
      - application/json
      description: Get Subscription
      parameters:
      - description: uuid formatted subscriptionId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Subscription'
      security:
      - BearerAuth: []
      summary: Get Subscription
      tags:
      - Alert
    put:
      X-func:
        name: UpdateSubscription
      consumes:
      - application/json
      description: Update Subscription
      parameters:
      - description: uuid formatted subscriptionId
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.SubscriptionUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Update Subscription
      tags:
      - Alert
  /assurance/device-healthy:
    get:
      X-func:
        name: GetDeviceHealthy
      consumes:
      - application/json
      description: Get Device Healthy
      parameters:
      - in: query
        name: siteId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.HealthHeatMap'
      security:
      - BearerAuth: []
      summary: Get Device Healthy
      tags:
      - Assurance
  /infra/aps:
    delete:
      X-func:
        name: BatchDeleteAp
      consumes:
      - application/json
      description: Batch Delete ap
      parameters:
      - description: ids
        in: body
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdsResponse'
      security:
      - BearerAuth: []
      summary: Batch Delete ap
      tags:
      - Infra.AP
    get:
      X-func:
        name: ListAps
      consumes:
      - application/json
      description: List aps
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceType
        type: array
      - in: query
        name: keyword
        type: string
      - in: query
        name: location
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: managementIp
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: manufacturer
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: name
        type: array
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - in: query
        name: serialNumber
        type: string
      - in: query
        name: siteId
        type: string
      - enum:
        - Active
        - Inactive
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.AP'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List aps
      tags:
      - Infra.AP
    put:
      X-func:
        name: BatchUpdateAp
      consumes:
      - application/json
      description: Batch Update ap
      parameters:
      - description: aps
        in: body
        name: aps
        required: true
        schema:
          items:
            $ref: '#/definitions/schemas.ApBatchUpdate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdsResponse'
      security:
      - BearerAuth: []
      summary: Batch Update ap
      tags:
      - Infra.AP
  /infra/aps/{id}:
    delete:
      X-func:
        name: DeleteAp
      consumes:
      - application/json
      description: Delete ap
      parameters:
      - description: uuid formatted ap id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete ap
      tags:
      - Infra.AP
    get:
      X-func:
        name: GetAp
      consumes:
      - application/json
      description: get ap
      parameters:
      - description: uuid formatted ap id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AP'
      security:
      - BearerAuth: []
      summary: Get ap
      tags:
      - Infra.AP
    put:
      X-func:
        name: UpdateAp
      consumes:
      - application/json
      description: Update ap
      parameters:
      - description: uuid formatted ap id
        in: path
        name: id
        required: true
        type: string
      - description: ap
        in: body
        name: ap
        required: true
        schema:
          $ref: '#/definitions/schemas.ApUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update ap
      tags:
      - Infra.AP
  /infra/circuits:
    get:
      X-func:
        name: ListCircuit
      description: List circuits
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: cid
        type: array
      - collectionFormat: csv
        in: query
        items:
          enum:
          - Internet
          - MPLS
          - IEPL
          - DPLC
          - DarkFiber
          - ADSL
          type: string
        name: circuitType
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: interfaceId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: ipv4Address
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: ipv6Address
        type: array
      - in: query
        name: keyword
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: monitorId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: name
        type: array
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: provider
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: siteId
        type: array
      - enum:
        - Active
        - Inactive
        in: query
        name: status
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Circuit'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List circuits
      tags:
      - Infra.Circuit
    post:
      X-func:
        name: CreateCircuit
      consumes:
      - application/json
      description: Create new circuit
      parameters:
      - description: Circuit
        in: body
        name: circuit
        required: true
        schema:
          $ref: '#/definitions/schemas.CircuitCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create new circuit
      tags:
      - Infra.Circuit
  /infra/circuits/{id}:
    delete:
      X-func:
        name: DeleteCircuit
      consumes:
      - application/json
      parameters:
      - description: uuid formatted circuitId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      tags:
      - Infra.Circuit
    get:
      X-func:
        name: GetCircuit
      consumes:
      - application/json
      description: Get circuit
      parameters:
      - description: uuid formatted circuitId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Circuit'
      security:
      - BearerAuth: []
      summary: Get circuit
      tags:
      - Infra.Circuit
    put:
      X-func:
        name: UpdateCircuit
      consumes:
      - application/json
      description: Update circuit
      parameters:
      - description: uuid formatted circuitId
        in: path
        name: id
        required: true
        type: string
      - description: Circuit
        in: body
        name: circuit
        required: true
        schema:
          $ref: '#/definitions/schemas.CircuitUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update circuit
      tags:
      - Infra.Circuit
  /infra/device-config-backup:
    post:
      X-func:
        name: CreateConfigBackUpTask
      consumes:
      - application/json
      description: Device Configuration backup
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.ConfigBackUpCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdsResponse'
      security:
      - BearerAuth: []
      summary: Device Configuration backup
      tags:
      - Infra.ScanDevice
  /infra/devices:
    get:
      X-func:
        name: ListDevices
      consumes:
      - application/json
      description: List devices
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceModel
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceRole
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: id
        type: array
      - in: query
        name: keyword
        type: string
      - in: query
        name: location
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: managementIp
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: manufacturer
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: name
        type: array
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - in: query
        name: rackId
        type: string
      - in: query
        name: serialNumber
        type: string
      - in: query
        name: siteId
        type: string
      - enum:
        - Active
        - Inactive
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Device'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List devices
      tags:
      - Infra.Device
    post:
      X-func:
        name: CreateDevice
      consumes:
      - application/json
      description: Create device
      parameters:
      - description: device
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/schemas.DeviceCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create device
      tags:
      - Infra.Device
  /infra/devices/{id}:
    delete:
      X-func:
        name: DeleteDevice
      consumes:
      - application/json
      description: Delete device
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete device
      tags:
      - Infra.Device
    get:
      X-func:
        name: GetDevice
      consumes:
      - application/json
      description: get device
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Device'
      security:
      - BearerAuth: []
      summary: Get device
      tags:
      - Infra.Device
    put:
      X-func:
        name: UpdateDevice
      consumes:
      - application/json
      description: Update device
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: device
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/schemas.DeviceUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update device
      tags:
      - Infra.Device
  /infra/devices/{id}/cli:
    delete:
      X-func:
        name: DeleteDeviceCliCredential
      consumes:
      - application/json
      description: Delete device cli credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete device cli credential
      tags:
      - Infra.Device
    get:
      X-func:
        name: GetDeviceCliCredential
      consumes:
      - application/json
      description: Get device cli credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CliCredential'
      security:
      - BearerAuth: []
      summary: Get device cli credential
      tags:
      - Infra.Device
    post:
      X-func:
        name: CreateDeviceCliCredential
      consumes:
      - application/json
      description: Create device new cli credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.CliCredentialCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create device new cli credential
      tags:
      - Infra.Device
    put:
      X-func:
        name: UpdateDeviceCliCredential
      consumes:
      - application/json
      description: Update device cli credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.CliCredentialUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update device cli credential
      tags:
      - Infra.Device
  /infra/devices/{id}/interfaces:
    get:
      X-func:
        name: GetDeviceInterfaces
      consumes:
      - application/json
      description: Get device interfaces
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.DeviceInterface'
            type: array
      security:
      - BearerAuth: []
      summary: Get device interfaces
      tags:
      - Infra.Device
  /infra/devices/{id}/restconf:
    delete:
      X-func:
        name: DeleteDeviceRestconfCredential
      consumes:
      - application/json
      description: Delete device restconf credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete device restconf credential
      tags:
      - Infra.Device
    get:
      X-func:
        name: GetDeviceRestconfCredential
      consumes:
      - application/json
      description: Get device restconf credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RestconfCredential'
      security:
      - BearerAuth: []
      summary: Get device restconf credential
      tags:
      - Infra.Device
    post:
      X-func:
        name: CreateDeviceRestconfCredential
      consumes:
      - application/json
      description: Create new device restconf credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.RestconfCredentialCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create new device restconf credential
      tags:
      - Infra.Device
    put:
      X-func:
        name: UpdateDeviceRestconfCredential
      consumes:
      - application/json
      description: Update device restconf credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.RestconfCredentialUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update device restconf credential
      tags:
      - Infra.Device
  /infra/devices/{id}/snmpv2:
    delete:
      X-func:
        name: DeleteDeviceSnmpV2Credential
      consumes:
      - application/json
      description: Delete device snmpV2 credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete device snmpV2 credential
      tags:
      - Infra.Device
    get:
      X-func:
        name: GetDeviceSnmpV2Credential
      consumes:
      - application/json
      description: Get device snmpV2 credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SnmpV2Credential'
      security:
      - BearerAuth: []
      summary: Get device snmpV2 credential
      tags:
      - Infra.Device
    post:
      X-func:
        name: CreateDeviceSnmpV2Credential
      consumes:
      - application/json
      description: Create device new snmpV2 credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.SnmpV2CredentialCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create new device snmpV2 credential
      tags:
      - Infra.Device
    put:
      X-func:
        name: UpdateDeviceSnmpV2Credential
      consumes:
      - application/json
      description: Update device snmpV2 credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.SnmpV2CredentialUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update device snmpV2 credential
      tags:
      - Infra.Device
  /infra/racks:
    get:
      X-func:
        name: ListRacks
      consumes:
      - application/json
      description: List racks
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: id
        type: array
      - in: query
        name: keyword
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: name
        type: array
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: serialNumber
        type: array
      - in: query
        name: siteId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Rack'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List racks
      tags:
      - Infra.Rack
    post:
      X-func:
        name: CreateRack
      consumes:
      - application/json
      description: Create new rack
      parameters:
      - description: rack
        in: body
        name: rack
        required: true
        schema:
          $ref: '#/definitions/schemas.RackCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create new rack
      tags:
      - Infra.Rack
  /infra/racks/{id}:
    delete:
      X-func:
        name: DeleteRack
      consumes:
      - application/json
      description: Delete rack
      parameters:
      - description: rackId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete rack
      tags:
      - Infra.Rack
    get:
      X-func:
        name: GetRack
      consumes:
      - application/json
      description: Get rack
      parameters:
      - description: rackId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.RackElevation'
      security:
      - BearerAuth: []
      summary: Get rack
      tags:
      - Infra.Rack
    put:
      X-func:
        name: UpdateRack
      consumes:
      - application/json
      description: Update rack
      parameters:
      - description: rackId
        in: path
        name: id
        required: true
        type: string
      - description: rack
        in: body
        name: rack
        required: true
        schema:
          $ref: '#/definitions/schemas.RackUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update rack
      tags:
      - Infra.Rack
  /infra/scan-aps:
    post:
      X-func:
        name: CreateScanApTask
      consumes:
      - application/json
      description: Scan AP
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.ScanApCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdsResponse'
      security:
      - BearerAuth: []
      summary: Scan AP
      tags:
      - Infra.ScanDevice
  /infra/scan-device-details:
    post:
      X-func:
        name: ScanDeviceDetails
      consumes:
      - application/json
      description: Scan device details
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.ScanDeviceDetailTask'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdsResponse'
      security:
      - BearerAuth: []
      summary: Scan device details
      tags:
      - Infra.ScanDevice
  /infra/scan-devices:
    delete:
      X-func:
        name: BatchDeleteScanDevice
      consumes:
      - application/json
      description: Scan Device Batch Delete
      parameters:
      - description: ids
        in: body
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdsResponse'
      security:
      - BearerAuth: []
      summary: Scan Device Batch Delete
      tags:
      - Infra.ScanDevice
    get:
      X-func:
        name: ListScanDevice
      consumes:
      - application/json
      description: Scan Device List
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: chassisId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceModel
        type: array
      - in: query
        name: keyword
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: managementIp
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: manufacturer
        type: array
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: platform
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.ScanDevice'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Scan Device List
      tags:
      - Infra.ScanDevice
    post:
      X-func:
        name: CreateScanDevice
      consumes:
      - application/json
      description: Scan Device Create
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.ScanDeviceCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ScanDeviceCreateResponse'
      security:
      - BearerAuth: []
      summary: Scan Device Create
      tags:
      - Infra.ScanDevice
    put:
      X-func:
        name: BatchUpdateScanDevice
      consumes:
      - application/json
      description: Scan Device Batch Update
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.ScanDeviceBatchUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdsResponse'
      security:
      - BearerAuth: []
      summary: Scan Device Batch Update
      tags:
      - Infra.ScanDevice
  /infra/scan-devices/{id}:
    delete:
      X-func:
        name: DeleteScanDevice
      consumes:
      - application/json
      description: Scan Device Delete
      parameters:
      - description: uuid formatted scanDeviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Scan Device Delete
      tags:
      - Infra.ScanDevice
    get:
      X-func:
        name: GetScanDevice
      consumes:
      - application/json
      description: Scan Device Get
      parameters:
      - description: uuid formatted scanDeviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ScanDevice'
      security:
      - BearerAuth: []
      summary: Scan Device Get
      tags:
      - Infra.ScanDevice
    put:
      X-func:
        name: UpdateScanDevice
      consumes:
      - application/json
      description: Scan Device Update
      parameters:
      - description: uuid formatted scanDeviceId
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schemas.ScanDeviceUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Scan Device Update
      tags:
      - Infra.ScanDevice
  /infra/servers:
    get:
      X-func:
        name: ListServers
      consumes:
      - application/json
      description: Get servers
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: id
        type: array
      - in: query
        name: keyword
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: managementIp
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: manufacturer
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: name
        type: array
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: osVersion
        type: array
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - in: query
        name: rackId
        type: string
      - in: query
        name: siteId
        type: string
      - enum:
        - Active
        - Inactive
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Server'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get servers
      tags:
      - Infra.Server
    post:
      X-func:
        name: CreateServer
      consumes:
      - application/json
      description: Create new server
      parameters:
      - description: server
        in: body
        name: server
        required: true
        schema:
          $ref: '#/definitions/schemas.ServerCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create new server
      tags:
      - Infra.Server
  /infra/servers/{id}:
    delete:
      X-func:
        name: DeleteServer
      consumes:
      - application/json
      description: Delete server
      parameters:
      - description: uuid formatted serverId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete server
      tags:
      - Infra.Server
    get:
      X-func:
        name: GetServer
      consumes:
      - application/json
      description: Get server
      parameters:
      - description: uuid formatted serverId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Server'
      security:
      - BearerAuth: []
      summary: Get server
      tags:
      - Infra.Server
    put:
      X-func:
        name: UpdateServer
      consumes:
      - application/json
      description: Update server
      parameters:
      - description: uuid formatted serverId
        in: path
        name: id
        required: true
        type: string
      - description: server
        in: body
        name: server
        required: true
        schema:
          $ref: '#/definitions/schemas.ServerUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update server
      tags:
      - Infra.Server
  /infra/servers/{id}/cli:
    delete:
      X-func:
        name: DeleteServerCliCredential
      consumes:
      - application/json
      description: Delete Server cli credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete Server cli credential
      tags:
      - Infra.Server
    get:
      X-func:
        name: GetServerCliCredential
      consumes:
      - application/json
      description: Get Server cli credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CliCredential'
      security:
      - BearerAuth: []
      summary: Get Server cli credential
      tags:
      - Infra.Server
    post:
      X-func:
        name: CreateServerCliCredential
      consumes:
      - application/json
      description: Create Server new cli credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.CliCredentialCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create Server new cli credential
      tags:
      - Infra.Server
    put:
      X-func:
        name: UpdateServerCliCredential
      consumes:
      - application/json
      description: Update Server cli credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.CliCredentialUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update Server cli credential
      tags:
      - Infra.Server
  /infra/servers/{id}/snmpv2:
    delete:
      X-func:
        name: DeleteServerSnmpV2Credential
      consumes:
      - application/json
      description: Delete server snmpV2 credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete server snmpV2 credential
      tags:
      - Infra.Server
    get:
      X-func:
        name: GetServerSnmpV2Credential
      consumes:
      - application/json
      description: Get server snmpV2 credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SnmpV2Credential'
      security:
      - BearerAuth: []
      summary: Get server snmpV2 credential
      tags:
      - Infra.Server
    post:
      X-func:
        name: CreateServerSnmpV2Credential
      consumes:
      - application/json
      description: Create server new snmpV2 credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.SnmpV2CredentialCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create server new snmpV2 credential
      tags:
      - Infra.Server
    put:
      X-func:
        name: UpdateServerSnmpV2Credential
      consumes:
      - application/json
      description: Update server snmpV2 credential
      parameters:
      - description: uuid formatted deviceId
        in: path
        name: id
        required: true
        type: string
      - description: Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/schemas.SnmpV2CredentialUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update server snmpV2 credential
      tags:
      - Infra.Server
  /infra/sites:
    get:
      X-func:
        name: ListSites
      consumes:
      - application/json
      description: List sites
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: id
        type: array
      - in: query
        name: keyword
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: name
        type: array
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: region
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: siteCode
        type: array
      - enum:
        - Active
        - Inactive
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.SiteResponse'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: List sites
      tags:
      - Infra.Site
    post:
      X-func:
        name: CreateSite
      consumes:
      - application/json
      description: Create new site
      parameters:
      - description: site
        in: body
        name: site
        required: true
        schema:
          $ref: '#/definitions/schemas.SiteCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create new site
      tags:
      - Infra.Site
  /infra/sites/{id}:
    delete:
      X-func:
        name: DeleteSite
      consumes:
      - application/json
      description: Delete site
      parameters:
      - description: uuid formatted siteId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete site
      tags:
      - Infra.Site
    get:
      X-func:
        name: GetSite
      consumes:
      - application/json
      description: Get site
      parameters:
      - description: uuid formatted siteId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SiteDetail'
      security:
      - BearerAuth: []
      summary: Get site
      tags:
      - Infra.Site
    put:
      X-func:
        name: UpdateSite
      consumes:
      - application/json
      description: Update site
      parameters:
      - description: uuid formatted siteId
        in: path
        name: id
        required: true
        type: string
      - description: site
        in: body
        name: site
        required: true
        schema:
          $ref: '#/definitions/schemas.SiteUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update site
      tags:
      - Infra.Site
  /intend/device-roles:
    get:
      X-func:
        name: DeviceRoleList
      consumes:
      - application/json
      description: Get list of device roles
      parameters:
      - in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/devicerole.DeviceRole'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get list of device roles
      tags:
      - Intend
  /intend/manufacturers:
    get:
      X-func:
        name: ManufacturerList
      consumes:
      - application/json
      description: Get list of Manufacturers
      parameters:
      - in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    type: string
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get list of Manufacturers
      tags:
      - Intend
  /intend/platforms:
    get:
      X-func:
        name: PlatformList
      consumes:
      - application/json
      description: Get list of Platforms
      parameters:
      - in: query
        name: keyword
        type: string
      - in: query
        name: platform
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    type: string
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get list of Platforms
      tags:
      - Intend
  /ipam/ip-addresses:
    get:
      X-func:
        name: ListIpAddresses
      consumes:
      - application/json
      description: Get ip address list
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: address
        type: array
      - in: query
        name: keyword
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - in: query
        name: range
        type: string
      - in: query
        name: siteId
        type: string
      - collectionFormat: csv
        description: Active, Reserved, Deprecated
        in: query
        items:
          type: string
        name: status
        type: array
      - collectionFormat: csv
        description: Dynamic, Static, Gateway, Broadcast, NetworkId
        in: query
        items:
          type: string
        name: type
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: integer
        name: vlan
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.IpAddress'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get ip address list
      tags:
      - IPAM
    post:
      X-func:
        name: CreateIpAddress
      consumes:
      - application/json
      description: Create ip address
      parameters:
      - description: ip
        in: body
        name: ip
        required: true
        schema:
          $ref: '#/definitions/schemas.IpAddressCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create ip address
      tags:
      - IPAM
  /ipam/ip-addresses/{id}:
    delete:
      X-func:
        name: DeleteIpAddress
      consumes:
      - application/json
      description: Delete ip address
      parameters:
      - description: uuid formatted ipAddressId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete ip address
      tags:
      - IPAM
    get:
      X-func:
        name: GetIpAddress
      consumes:
      - application/json
      description: Get ip address
      parameters:
      - description: uuid formatted ipAddressId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IpAddress'
      security:
      - BearerAuth: []
      summary: Get ip address
      tags:
      - IPAM
    put:
      X-func:
        name: UpdateIpAddress
      consumes:
      - application/json
      description: Update ip address
      parameters:
      - description: uuid formatted ipAddressId
        in: path
        name: id
        required: true
        type: string
      - description: ip
        in: body
        name: ip
        required: true
        schema:
          $ref: '#/definitions/schemas.IpAddressUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IpAddress'
      security:
      - BearerAuth: []
      summary: Update ip address
      tags:
      - IPAM
  /ipam/prefixes:
    get:
      X-func:
        name: ListPrefixes
      consumes:
      - application/json
      description: Get prefix list
      parameters:
      - in: query
        name: keyword
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - in: query
        name: orderBy
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 1000
        minimum: 1
        name: pageSize
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: range
        type: array
      - in: query
        name: siteId
        type: string
      - enum:
        - Dynamic
        - Static
        in: query
        name: type
        type: string
      - enum:
        - IPv4
        - IPv6
        in: query
        name: version
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: integer
        maxItems: 4094
        minItems: 1
        name: vlanId
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: vlanName
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemas.ListResponse'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schemas.Prefix'
                  type: array
              type: object
      security:
      - BearerAuth: []
      summary: Get prefix list
      tags:
      - IPAM
    post:
      X-func:
        name: CreatePrefix
      consumes:
      - application/json
      description: Create prefix
      parameters:
      - description: Prefix
        in: body
        name: prefix
        required: true
        schema:
          $ref: '#/definitions/schemas.PrefixCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Create prefix
      tags:
      - IPAM
  /ipam/prefixes/{id}:
    delete:
      X-func:
        name: DeletePrefix
      consumes:
      - application/json
      description: Delete prefix
      parameters:
      - description: uuid formatted prefixId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Delete prefix
      tags:
      - IPAM
    get:
      X-func:
        name: GetPrefix
      consumes:
      - application/json
      description: Get prefix
      parameters:
      - description: uuid formatted prefixId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Prefix'
      security:
      - BearerAuth: []
      summary: Get prefix
      tags:
      - IPAM
    put:
      X-func:
        name: UpdatePrefix
      consumes:
      - application/json
      description: Update prefix
      parameters:
      - description: uuid formatted prefixId
        in: path
        name: id
        required: true
        type: string
      - description: Prefix
        in: body
        name: prefix
        required: true
        schema:
          $ref: '#/definitions/schemas.PrefixUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.IdResponse'
      security:
      - BearerAuth: []
      summary: Update prefix
      tags:
      - IPAM
  /login/password:
    post:
      X-func:
        name: PasswordLogin
      parameters:
      - description: Username Password Login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.Oauth2PasswordRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/security.AccessToken'
      summary: Username Password Login
      tags:
      - Auth
  /login/refresh:
    post:
      X-func:
        name: CreateRefreshToken
      parameters:
      - description: Generate refresh token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.Oauth2RefreshRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/security.AccessToken'
      summary: Generate refresh token
      tags:
      - Auth
  /monitor/time-series:
    get:
      X-func:
        name: GetTimeSeries
      consumes:
      - application/json
      description: Get Time Series Data
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: apName
        type: array
      - in: query
        name: dataPoints
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: deviceId
        type: array
      - in: query
        name: endedAt
        required: true
        type: string
      - in: query
        name: funcName
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: ifName
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: metricName
        required: true
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: radioType
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: siteId
        type: array
      - in: query
        name: startedAt
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/vtm.MatrixResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get Time Series Data
      tags:
      - Monitor
  /org/organizations:
    post:
      X-func:
        name: CreateOrganization
      consumes:
      - application/json
      description: Create organization
      parameters:
      - description: Create organization
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.Organization'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Organization'
      security:
      - BearerAuth: []
      summary: Create organization
      tags:
      - Organization
  /task/config-backup:
    post:
      X-func:
        name: ConfigBackupCallback
      consumes:
      - application/json
      description: Configuration backup callback
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/intendtask.ConfigurationBackupTaskResult'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
      security:
      - BearerAuth: []
      summary: ConfigurationBackup Callback
      tags:
      - Task
  /task/scan-aps:
    post:
      X-func:
        name: ScanApCallback
      consumes:
      - application/json
      description: Scan AP callback
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/intendtask.ApScanResponse'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
      security:
      - BearerAuth: []
      summary: ScanAP Callback
      tags:
      - Task
  /task/scan-device-basic:
    post:
      X-func:
        name: ScanDeviceBasicInfoCallback
      consumes:
      - application/json
      description: Scan device basic information callback
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/intendtask.DeviceBasicInfoScanResponse'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
      security:
      - BearerAuth: []
      summary: ScanDevice BasicInfo Callback
      tags:
      - Task
  /task/scan-devices:
    post:
      X-func:
        name: ScanDeviceDetailCallback
      consumes:
      - application/json
      description: Scan device detail callback
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/intendtask.DeviceScanResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
      security:
      - BearerAuth: []
      summary: ScanDeviceDetail Callback
      tags:
      - Task
  /task/wlan-users:
    post:
      X-func:
        name: WlanUserCallback
      consumes:
      - application/json
      description: Wlan user callback
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/intendtask.WlanUserTaskResult'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SuccessResponse'
      security:
      - BearerAuth: []
      summary: Wlan User Callback
      tags:
      - Task
  /webssh/proxy/{sessionId}:
    get:
      X-func:
        name: ProxyWebSSHCallback
      consumes:
      - application/json
      description: WebSSH Proxy
      parameters:
      - description: session id
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: WebSSH Proxy
      tags:
      - WebSSH
  /webssh/server/{deviceId}:
    get:
      X-func:
        name: CreateWebSSHSession
      consumes:
      - application/json
      description: WebSSH Server
      parameters:
      - description: device id
        in: path
        name: deviceId
        required: true
        type: string
      - in: query
        name: cols
        type: integer
      - in: query
        name: rows
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: WebSSH Server
      tags:
      - WebSSH
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
